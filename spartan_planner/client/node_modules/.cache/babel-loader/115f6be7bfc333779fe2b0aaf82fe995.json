{"ast":null,"code":"var _jsxFileName = \"/Users/pakshingkan/Desktop/Spring2021/CS157C/CS156C_Project/CS157C-team8/spartan_planner/CS157C-team8/spartan_planner/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport initialData from './initial-data';\nimport Column from './column';\nimport styled from 'styled-components';\nimport { DragDropContext } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex\n`;\n_c = Container;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onDragStart = () => {\n      /*\n      document.body.style.color = 'Orange'\n      document.body.style.transition = 'background-color 0.3s ease'\n      */\n    };\n\n    this.onDragUpdate = update => {\n      /*\n      const {destination} = update;\n      const opacity = destination? destination.index / Object.keys(this.state.tasks).length:0\n      document.body.style.backgroundColor = `rgba(153,141,217, ${opacity})`\n      */\n    };\n\n    this.insertOnClick = () => {\n      alert(\"click\");\n    };\n\n    this.updateOnClick = () => {\n      alert(\"update\");\n    };\n\n    this.deleteOnClick = () => {\n      alert(\"delete\");\n    };\n\n    this.onDragEnd = result => {\n      const {\n        destination,\n        source,\n        draggableId\n      } = result;\n      document.body.style.color = 'inherit';\n      document.body.style.backgroundColor = 'inherit';\n      console.log(\"destination\", destination);\n      console.log(\"source\", source);\n      console.log(\"draggableId\", draggableId);\n      console.log(\"\\n\\n\");\n\n      if (!destination) {\n        return;\n      }\n\n      if (destination.droppableId === source.droppableId && destination.index === source.index) {\n        return;\n      }\n\n      const start = this.state.columns[source.droppableId];\n      const finish = this.state.columns[destination.droppableId];\n      console.log(\"start\", start);\n      console.log(\"finish\", finish);\n\n      if (start === finish) {\n        const newTaskIds = Array.from(start.taskIds);\n        newTaskIds.splice(source.index, 1);\n        newTaskIds.splice(destination.index, 0, draggableId);\n        const newColumn = { ...start,\n          taskIds: newTaskIds\n        };\n        const newState = { ...this.state,\n          columns: { ...this.state.columns,\n            [newColumn.id]: newColumn\n          }\n        };\n        this.setState(newState);\n        return;\n      } // Moving from one list to another\n\n\n      console.log(\"hit\");\n      const startTaskIds = Array.from(start.taskIds);\n      startTaskIds.splice(source.index, 1);\n      const newStart = { ...start,\n        taskIds: startTaskIds\n      };\n      const finishTaskIds = Array.from(finish.taskIds);\n      finishTaskIds.splice(destination.index, 0, draggableId); //insert\n\n      const newFinish = { ...finish,\n        taskIds: finishTaskIds\n      };\n      const newState = { ...this.state,\n        columns: { ...this.state.columns,\n          [newStart.id]: newStart,\n          [newFinish.id]: newFinish\n        }\n      };\n      this.setState(newState);\n    };\n\n    this.state = initialData;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragStart: this.onDragStart,\n      onDragUpdate: this.onDragUpdate,\n      onDragEnd: this.onDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        children: this.state.columnOrder.map(columnId => {\n          //console.log(\"columnId\",columnId)\n          let theIdNum = columnId.match(/\\d/g);\n          theIdNum = parseInt(theIdNum.join(\"\"));\n          console.log(\"theIdNum\", theIdNum);\n          const column = this.state.columns[columnId]; //console.log(\"column\",column)\n\n          if (theIdNum < 4) {\n            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n            return /*#__PURE__*/_jsxDEV(Column, {\n              column: column,\n              tasks: tasks\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 22\n            }, this);\n          } else {\n            return;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: this.state.columnOrder.map(columnId => {\n          //console.log(\"columnId\",columnId)\n          let theIdNum = columnId.match(/\\d/g);\n          theIdNum = parseInt(theIdNum.join(\"\"));\n          console.log(\"theIdNum\", theIdNum);\n          const column = this.state.columns[columnId]; //console.log(\"column\",column)\n\n          if (theIdNum > 3) {\n            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n            return /*#__PURE__*/_jsxDEV(Column, {\n              column: column,\n              tasks: tasks\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 22\n            }, this);\n          } else {\n            return;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: this.state.columnOrder.map(columnId => {\n          //console.log(\"columnId\",columnId)\n          let theIdNum = columnId.match(/\\d/g);\n          theIdNum = parseInt(theIdNum.join(\"\"));\n          console.log(\"theIdNum\", theIdNum);\n          const column = this.state.columns[columnId]; //console.log(\"column\",column)\n\n          if (theIdNum > 7) {\n            const tasks = column.taskIds.map(taskId => this.state.tasks[taskId]);\n            return /*#__PURE__*/_jsxDEV(Column, {\n              column: column,\n              tasks: tasks\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 22\n            }, this);\n          } else {\n            return;\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Engineer only\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.insertOnClick,\n          children: \"Insert new course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.updateOnClick,\n          children: \"Update a course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.deleteOnClick,\n          children: \"Delete a course\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 219,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 218,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nvar _c;\n\n$RefreshReg$(_c, \"Container\");","map":{"version":3,"sources":["/Users/pakshingkan/Desktop/Spring2021/CS157C/CS156C_Project/CS157C-team8/spartan_planner/CS157C-team8/spartan_planner/client/src/index.js"],"names":["React","ReactDOM","render","initialData","Column","styled","DragDropContext","Container","div","App","Component","constructor","props","onDragStart","onDragUpdate","update","insertOnClick","alert","updateOnClick","deleteOnClick","onDragEnd","result","destination","source","draggableId","document","body","style","color","backgroundColor","console","log","droppableId","index","start","state","columns","finish","newTaskIds","Array","from","taskIds","splice","newColumn","newState","id","setState","startTaskIds","newStart","finishTaskIds","newFinish","columnOrder","map","columnId","theIdNum","match","parseInt","join","column","tasks","taskId","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport initialData from './initial-data'\nimport Column from './column'\nimport styled from 'styled-components'\nimport {DragDropContext} from 'react-beautiful-dnd'\n\n\nconst Container = styled.div`\n  display: flex\n`;\n\nclass App extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = initialData;\n  }\n\n  onDragStart = () =>{\n    /*\n    document.body.style.color = 'Orange'\n    document.body.style.transition = 'background-color 0.3s ease'\n    */\n  }\n\n  onDragUpdate = update =>{\n    /*\n    const {destination} = update;\n    const opacity = destination? destination.index / Object.keys(this.state.tasks).length:0\n    document.body.style.backgroundColor = `rgba(153,141,217, ${opacity})`\n    */\n  }\n\n  insertOnClick = () =>{\n    alert(\"click\")\n  }\n\n  updateOnClick = () =>{\n    alert(\"update\")\n  }\n\n\n  deleteOnClick = () =>{\n    alert(\"delete\")\n  }\n\n\n  onDragEnd = result =>{\n    const {destination, source, draggableId} = result;\n    document.body.style.color = 'inherit'\n    document.body.style.backgroundColor = 'inherit'\n    console.log(\"destination\",destination);\n    console.log(\"source\",source)\n    console.log(\"draggableId\",draggableId)\n    console.log(\"\\n\\n\")\n  \n    if(!destination){\n      \n      return;\n      \n    }\n    if(destination.droppableId === source.droppableId && destination.index === source.index){\n\n      return;\n    }\n\n    const start = this.state.columns[source.droppableId];\n    const finish = this.state.columns[destination.droppableId];\n\n    console.log(\"start\",start)\n    console.log(\"finish\", finish)\n    \n    if(start === finish){\n   \n    const newTaskIds = Array.from(start.taskIds);\n    newTaskIds.splice(source.index,1);\n    newTaskIds.splice(destination.index,0,draggableId);\n\n    const newColumn={\n      ...start,\n      taskIds:newTaskIds,\n    };\n\n    const newState={\n      ...this.state,\n      columns:{\n        ...this.state.columns,\n        [newColumn.id]: newColumn,\n      }\n    }\n\n    this.setState(newState)\n    return;\n   }\n\n\n    // Moving from one list to another\n    console.log(\"hit\")\n    const startTaskIds = Array.from(start.taskIds);\n    startTaskIds.splice(source.index, 1);\n    const newStart = {\n      ...start,\n      taskIds: startTaskIds\n    }\n\n    const finishTaskIds = Array.from(finish.taskIds);\n    finishTaskIds.splice(destination.index, 0, draggableId); //insert\n    const newFinish = {\n      ...finish,\n      taskIds:finishTaskIds\n    }\n\n    const newState = {\n      ...this.state,\n      columns:{\n        ...this.state.columns,\n        [newStart.id]:newStart,\n        [newFinish.id]: newFinish,\n        \n      }\n    }\n\n    this.setState(newState)\n  }\n\n  render(){\n    return (\n      <DragDropContext \n        onDragStart={this.onDragStart}\n        onDragUpdate={this.onDragUpdate}\n        onDragEnd={this.onDragEnd}\n      >\n        <Container>\n          {this.state.columnOrder.map((columnId)=>{\n            //console.log(\"columnId\",columnId)\n            let theIdNum = columnId.match(/\\d/g);\n            theIdNum = parseInt(theIdNum.join(\"\"));\n            \n            console.log(\"theIdNum\",theIdNum);\n            const column = this.state.columns[columnId];\n            //console.log(\"column\",column)\n\n            if(theIdNum < 4){\n              const tasks = column.taskIds.map(taskId => this.state.tasks[taskId])\n              return <Column key={column.id} column={column} tasks={tasks}/>\n            }else{\n              return;\n            }\n            \n          })}\n        </Container>\n\n\n        <Container>\n        {this.state.columnOrder.map((columnId)=>{\n            //console.log(\"columnId\",columnId)\n            let theIdNum = columnId.match(/\\d/g);\n            theIdNum = parseInt(theIdNum.join(\"\"));\n            \n            console.log(\"theIdNum\",theIdNum);\n            const column = this.state.columns[columnId];\n            //console.log(\"column\",column)\n\n            if(theIdNum > 3){\n              const tasks = column.taskIds.map(taskId => this.state.tasks[taskId])\n              return <Column key={column.id} column={column} tasks={tasks}/>\n            }else{\n              return;\n            }\n            \n          })}\n\n        </Container>\n\n\n        <Container>\n        {this.state.columnOrder.map((columnId)=>{\n            //console.log(\"columnId\",columnId)\n            let theIdNum = columnId.match(/\\d/g);\n            theIdNum = parseInt(theIdNum.join(\"\"));\n            \n            console.log(\"theIdNum\",theIdNum);\n            const column = this.state.columns[columnId];\n            //console.log(\"column\",column)\n\n            if(theIdNum > 7){\n              const tasks = column.taskIds.map(taskId => this.state.tasks[taskId])\n              return <Column key={column.id} column={column} tasks={tasks}/>\n            }else{\n              return;\n            }\n            \n          })}\n\n        </Container>\n\n        <div>\n        <h2>Engineer only</h2>\n        </div>\n\n        <Container>\n        <button onClick={this.insertOnClick}>Insert new course</button>\n        <button onClick={this.updateOnClick}>Update a course</button>\n        <button onClick={this.deleteOnClick}>Delete a course</button>\n        </Container>\n\n\n        \n      </DragDropContext>\n      \n    )\n\n  }\n}\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/pakshingkan/Desktop/Spring2021/CS157C/CS156C_Project/CS157C-team8/spartan_planner/CS157C-team8/spartan_planner/client/src/task.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Draggable } from 'react-beautiful-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n    border: 1px solid lightgray;\n    border-radius: 2px;\n    padding: 8px;\n    margin-bottom:8px;\n    background-color: ${props => props.isDragging ? 'lightgreen' : 'white'};\n    display : flex;\n\n`;\n_c = Container;\nconst Handle = styled.div`\n    width: 20px;\n    height: 20px;\n    background-color :orange;\n    border-radius: 4px;\n    margin-right: 8px;\n`;\n_c2 = Handle;\nexport default class Task extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.taskOnClick = () => {\n      alert(this.props.task.content);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: this.props.task.id,\n      index: this.props.index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(Container, { ...provided.draggableProps,\n        ref: provided.innerRef,\n        isDragging: snapshot.isDragging,\n        children: [/*#__PURE__*/_jsxDEV(Handle, {\n          onClick: this.taskOnClick,\n          ...provided.dragHandleProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), this.props.task.content]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Handle\");","map":{"version":3,"sources":["/Users/pakshingkan/Desktop/Spring2021/CS157C/CS156C_Project/CS157C-team8/spartan_planner/CS157C-team8/spartan_planner/client/src/task.jsx"],"names":["React","styled","Draggable","Container","div","props","isDragging","Handle","Task","Component","taskOnClick","alert","task","content","render","id","index","provided","snapshot","draggableProps","innerRef","dragHandleProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,SAAR,QAAwB,qBAAxB;;AAGA,MAAMC,SAAS,GAAGF,MAAM,CAACG,GAAI;AAC7B;AACA;AACA;AACA;AACA,wBAAwBC,KAAK,IAAKA,KAAK,CAACC,UAAN,GAAmB,YAAnB,GAAkC,OAAS;AAC7E;AACA;AACA,CARA;KAAMH,S;AAWN,MAAMI,MAAM,GAAGN,MAAM,CAACG,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;MAAMG,M;AAUN,eAAe,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAkC;AAAA;AAAA;;AAAA,SAG7CC,WAH6C,GAG/B,MAAK;AACfC,MAAAA,KAAK,CAAC,KAAKN,KAAL,CAAWO,IAAX,CAAgBC,OAAjB,CAAL;AACH,KAL4C;AAAA;;AAQ7CC,EAAAA,MAAM,GAAE;AAEJ,wBACA,QAAC,SAAD;AACI,MAAA,WAAW,EAAE,KAAKT,KAAL,CAAWO,IAAX,CAAgBG,EADjC;AAEI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWW,KAFtB;AAAA,gBAKK,CAACC,QAAD,EAAWC,QAAX,kBACG,QAAC,SAAD,OACQD,QAAQ,CAACE,cADjB;AAGI,QAAA,GAAG,EAAEF,QAAQ,CAACG,QAHlB;AAII,QAAA,UAAU,EAAEF,QAAQ,CAACZ,UAJzB;AAAA,gCAMI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAE,KAAKI,WAAtB;AAAA,aAAuCO,QAAQ,CAACI;AAAhD;AAAA;AAAA;AAAA;AAAA,gBANJ,EAOK,KAAKhB,KAAL,CAAWO,IAAX,CAAgBC,OAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AANR;AAAA;AAAA;AAAA;AAAA,YADA;AAqBH;;AA/B4C","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport {Draggable} from 'react-beautiful-dnd'\n\n\nconst Container = styled.div`\n    border: 1px solid lightgray;\n    border-radius: 2px;\n    padding: 8px;\n    margin-bottom:8px;\n    background-color: ${props => (props.isDragging ? 'lightgreen' : 'white')};\n    display : flex;\n\n`;\n\n\nconst Handle = styled.div`\n    width: 20px;\n    height: 20px;\n    background-color :orange;\n    border-radius: 4px;\n    margin-right: 8px;\n`\n\n\n\nexport default class Task extends React.Component{\n\n\n    taskOnClick = () =>{\n        alert(this.props.task.content)\n    }\n\n\n    render(){\n        \n        return (\n        <Draggable \n            draggableId={this.props.task.id} \n            index={this.props.index}\n            \n        >\n            {(provided, snapshot)=>(\n                <Container\n                    {...provided.draggableProps}\n                   \n                    ref={provided.innerRef}\n                    isDragging={snapshot.isDragging}\n                >\n                    <Handle onClick={this.taskOnClick} {...provided.dragHandleProps}/>\n                    {this.props.task.content}\n                </Container>\n            )}\n            \n        </Draggable>\n        \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}